title = "Home"
url = "/"
layout = "default"

[Gallery]
markup = "user"
idGallery = "_home"
==
==

<head>
    <!-- Preload First Image -->
    {% if gallery.images|length > 0 %}
        <link rel="preload" as="image" href="{{ gallery.images[0].path | resize(500) }}">
    {% endif %}
    
    <style>
        /* Preloader */
        #rpreloader {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: white;
            z-index: 99999;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Ensure images fit properly */
        .image {
            max-width: 100%;
            height: auto;
            object-fit: contain;
        }
    </style>
</head>

<body>
    <div id="rpreloader">
        <img src="{{ 'assets/img/core-img/preloader.gif'|theme }}" class="image" loading="eager">
    </div>
    
    <div id="content" style="display: none;">
        <div id="container">
            <div id="cycler"></div>
        </div>

        <div class="js-files" data-is-authenticated="{{ gallery.images|json_encode|e('html_attr') }}">
            <!-- Gallery JSON Data -->
        </div>
    </div>

<script defer>
    document.addEventListener("DOMContentLoaded", function() {
        let imagesLoaded = 0;
        let images = JSON.parse(document.querySelector(".js-files").dataset.isAuthenticated);
        let container = document.getElementById("cycler");

        if (images.length > 0) {
            images.forEach((image, index) => {
                let img = document.createElement("img");
                img.classList.add(index === 0 ? "active image" : "image");
                img.src = image.path;
                img.loading = "lazy";
                img.onload = () => {
                    imagesLoaded++;
                    if (imagesLoaded === 1) {
                        document.getElementById("rpreloader").style.display = "none";
                        document.getElementById("content").style.display = "block";
                    }
                };
                container.appendChild(img);
            });
        }

        function cycleImages() {
            let active = document.querySelector('#cycler .active');
            let next = active.nextElementSibling || document.querySelector('#cycler img:first-child');
            
            active.classList.remove("active");
            active.style.opacity = 0;
            next.classList.add("active");
            next.style.opacity = 1;
        }

        setInterval(cycleImages, 4000);
    });
</script>

</body>